import telebot
import requests
import random
import time

BOT_TOKEN = '7964928255:AAFOsLr9zDbLQXoZMxrhFzd54uJEzgd33QE'  # Replace with your bot token
OWNER_ID = 930577300
COOLDOWN = 15  # seconds
MAX_CC_PER_MSG = 10

bot = telebot.TeleBot(BOT_TOKEN)
cooldowns = {}

# ========== Fake Identity Generator ==========
indian_states = ["Delhi", "Maharashtra", "Karnataka", "West Bengal"]
us_states = ["California", "Texas", "New York", "Florida"]

def generate_fake_identity(country):
    if country == "india":
        name = f"Rahul {random.choice(['Sharma', 'Verma', 'Singh', 'Patel'])}"
        phone = f"+91{random.randint(7000000000, 9999999999)}"
        state = random.choice(indian_states)
        address = f"{random.randint(101, 999)} MG Road"
        city = "Mumbai"
        zip_code = f"{random.randint(100000, 999999)}"
        return {
            "Name": name,
            "Address": address,
            "City": city,
            "State": state,
            "Zip": zip_code,
            "Phone": phone,
            "Country": "India"
        }
    elif country == "usa":
        name = f"{random.choice(['John', 'Mike', 'Emma', 'Olivia'])} {random.choice(['Smith', 'Johnson', 'Brown'])}"
        phone = f"+1{random.randint(2000000000, 9999999999)}"
        state = random.choice(us_states)
        address = f"{random.randint(100, 999)} Main Street"
        city = "New York"
        zip_code = f"{random.randint(10000, 99999)}"
        return {
            "Name": name,
            "Address": address,
            "City": city,
            "State": state,
            "Zip": zip_code,
            "Phone": phone,
            "Country": "United States"
        }
    return None

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "Welcome to CC Checker Bot!\nUse:\n- Send `CC|MM|YY|CVV` (max 10 lines)\n- `/gen india` or `/gen usa`\n\nMade by @PYSCHOXKINGYT", parse_mode="Markdown")

@bot.message_handler(commands=['gen'])
def generate_command(message):
    try:
        country = message.text.split()[1].lower()
        identity = generate_fake_identity(country)
        if not identity:
            bot.reply_to(message, "Invalid country. Use `/gen india` or `/gen usa`")
            return
        response = "\n".join([f"*{k}:* {v}" for k, v in identity.items()])
        bot.reply_to(message, f"{response}\n\nGenerated by @PYSCHOXKINGYT", parse_mode="Markdown")
    except IndexError:
        bot.reply_to(message, "Please specify a country: `/gen india` or `/gen usa`", parse_mode="Markdown")

# ========== CC Utils ==========
def luhn_check(card_number):
    total = 0
    reverse_digits = card_number[::-1]
    for i, d in enumerate(reverse_digits):
        n = int(d)
        if i % 2 == 1:
            n *= 2
            if n > 9:
                n -= 9
        total += n
    return total % 10 == 0

def bin_lookup(bin_number):
    try:
        res = requests.get(f'https://lookup.binlist.net/{bin_number}', headers={"Accept-Version": "3"})
        if res.status_code == 200:
            data = res.json()
            return {
                "scheme": data.get("scheme", "N/A"),
                "type": data.get("type", "N/A"),
                "brand": data.get("brand", "N/A"),
                "bank": data.get("bank", {}).get("name", "N/A"),
                "country": data.get("country", {}).get("name", "N/A")
            }
    except Exception:
        pass
    return {}

# ========== Main Checker ==========
@bot.message_handler(func=lambda m: True)
def check_cc(message):
    user_id = message.from_user.id

    # Cooldown check
    if user_id != OWNER_ID:
        last_time = cooldowns.get(user_id, 0)
        if time.time() - last_time < COOLDOWN:
            wait = int(COOLDOWN - (time.time() - last_time))
            bot.reply_to(message, f"Wait {wait}s before next check.")
            return
        cooldowns[user_id] = time.time()

    # Read and limit input
    cc_lines = [l.strip() for l in message.text.strip().splitlines() if '|' in l]
    if len(cc_lines) > MAX_CC_PER_MSG:
        bot.reply_to(message, f"Max {MAX_CC_PER_MSG} cards at once.")
        return

    replies = []
    for line in cc_lines:
        try:
            cc, mm, yy, cvv = line.split('|')
            if not (cc.isdigit() and mm.isdigit() and yy.isdigit() and cvv.isdigit()):
                raise ValueError("Invalid format")

            valid = luhn_check(cc)
            bin_data = bin_lookup(cc[:6])

            replies.append(
                f"`{cc}|{mm}|{yy}|{cvv}`\n"
                f"Luhn: {'Valid ✅' if valid else 'Invalid ❌'}\n"
                f"Bank: {bin_data.get('bank')}\n"
                f"Type: {bin_data.get('type')} | Brand: {bin_data.get('brand')}\n"
                f"Country: {bin_data.get('country')} | Scheme: {bin_data.get('scheme')}\n"
            )
        except Exception:
            replies.append(f"`{line}` → Invalid format or error.")

    final_reply = "\n\n".join(replies) + f"\n\nMade by @PYSCHOXKINGYT"
    bot.reply_to(message, final_reply, parse_mode="Markdown")

print("Bot running... Owner ID 930577300 — @PYSCHOXKINGYT")
bot.infinity_polling()